/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Customer;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author haree
 */
public class CustComplaint extends javax.swing.JPanel {

    JFrame frame;
    private List<String> orders;

    /**
     * Creates new form CustComplaint
     */
    public CustComplaint(JFrame frame){
        initComponents();
        this.frame = frame;
        setBounds(0, 0, 1536, 864); 
        frame.setLayout(null);
        
        
        orders = new ArrayList<>();
        loadOrders();
        populateOrderDropdown();
                        setBounds(0, 0, 1536, 864); // This line must exist in every JPanel
        this.frame = frame;
        frame.setLayout(null);
    }
    /**
     * Loads available orders from a file or a data source.
     */
    private void loadOrders() {
        // Example: Load orders from a file (you can customize this logic)
        try (BufferedReader br = new BufferedReader(new FileReader("order.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String array[] = line.split(",");
                if (array.length == 8 && array[0].equals(customer.userID)) {
                    orders.add(array[1]); // Each line represents an order ID
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading orders: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Populates the order dropdown with available orders.
     */
    private void populateOrderDropdown() {
        for (String order : orders) {
            jComboBox1.addItem(order); // Add each order ID to the dropdown
        }
    }
   private void filterOrders() {
        String selectedOrder = (String) jComboBox1.getSelectedItem();

        if (selectedOrder == null || selectedOrder.equals("All Orders")) {
            JOptionPane.showMessageDialog(this, "All orders are displayed.", "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        StringBuilder filteredOrders = new StringBuilder();
        for (String order : orders) {
            if (order.equals(selectedOrder)) {
                filteredOrders.append(order).append("\n");
            }
        }


    
    }
        private void saveComplaint(String orderID, String complaint, int rating) {
        String ticketID = "T" + UUID.randomUUID().toString().substring(0, 6).toUpperCase(); // Generate a unique ticket ID
        String customerID = customer.userID; // Example customer ID
        String status = "Open"; // Default status for new complaints
        String ticketEntry = ticketID + "," + orderID + "," + customerID + "," + complaint + "," + rating + "," + status;

        try (BufferedWriter writer = new BufferedWriter(new FileWriter("complaints.txt", true))) {
            writer.write(ticketEntry);
            writer.newLine();
            JOptionPane.showMessageDialog(this, "Complaint submitted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving complaint: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("CustComplaint"));
        setMinimumSize(new java.awt.Dimension(1552, 837));

        jLabel1.setText("Write a complaint");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1428, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(626, 626, 626)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(188, 188, 188))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String selectedOrder = (String) jComboBox1.getSelectedItem();
        String complaintContent = jTextArea1.getText().trim();

        if (selectedOrder == null || selectedOrder.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select an order to write a complaint.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (complaintContent.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your complaint.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String ratingInput = JOptionPane.showInputDialog(this, "Enter rating (1-5):", "Rating", JOptionPane.QUESTION_MESSAGE);
        int rating;
        try {
            rating = Integer.parseInt(ratingInput);
            if (rating < 1 || rating > 5) {
                throw new NumberFormatException();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid rating. Please enter a number between 1 and 5.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Save the 
        saveComplaint(selectedOrder, complaintContent, rating);
        jTextArea1.setText(""); // Clear the text area    }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
     filterOrders();  
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        review_complaint panel = new review_complaint(frame);
        frame.remove(this);
        frame.add(panel);
        frame.revalidate();
        frame.repaint();       
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
